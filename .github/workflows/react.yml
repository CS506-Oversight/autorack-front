name: Node CI

on: [ push ]

env:
  CI: 1

  FLASK_APP: run
  FLASK_ENV: production
  FIREBASE_ACCOUNT_KEY: ${{ secrets.FIREBASE_ACCOUNT_KEY }}

  PSQL_VERSION: '13.2'
  PSQL_TEST_DB: 'testdb'
  PSQL_TEST_USER: 'test'
  PSQL_TEST_PASSWORD: 'test'

  SQLALCHEMY_DATABASE_URI: 'postgresql://test:test@localhost:5432/testdb'

  REACT_APP_API_ROOT: http://localhost:5000

  REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
  REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
  REACT_APP_FIREBASE_PROJ_ID: ${{ secrets.REACT_APP_FIREBASE_PROJ_ID }}
  REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
  REACT_APP_FIREBASE_MSG_SEND_ID: ${{ secrets.REACT_APP_FIREBASE_MSG_SEND_ID }}
  REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}

jobs:
  build:
    name: CI

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Checkout backend repository
        uses: actions/checkout@v2
        with:
          repository: CS506-Oversight/autorack-back
          path: autorack-back

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start PostgreSQL server
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: ${{ env.PSQL_VERSION }}
          postgresql db: ${{ env.PSQL_TEST_DB }}
          postgresql user: ${{ env.PSQL_TEST_USER }}
          postgresql password: ${{ env.PSQL_TEST_PASSWORD }}

      - name: Install required packages for the backend
        run: |
          pip install -r autorack-back/requirements-dev.txt

      - name: Setup database
        run: |
          cd autorack-back
          flask db upgrade

      - name: npm ci
        run: npm ci

      - name: npm run lint
        run: npm run lint

      - name: npm run lint (css)
        run: npm run lint:css

      - name: npm test
        run: |
          python3 autorack-back/run.py &
          npm run test:coverage

      - name: Send Coverage report
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/clover.xml

      - name: npm build
        run: npm run build
